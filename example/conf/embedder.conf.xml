<xml>

	<!-- include default configuration file (relative to this file) -->
	<include src="{EXT}/conf/common.conf.xml" />

	<!-- default configuration -->
	<config>

		<!-- doctype to render includes -->
		<doctype>html5</doctype>

		<!-- where is your htdocs root directory -->
		<!-- this is needed to create absolute urls -->
		<!-- default is relative to the config file -->
		<webroot>{CONF}/../../..</webroot>

		<!-- define a current working directory -->
		<!-- you can adjust this also in the xml config -->
		<directory>{CONF}/../embedder</directory>

		<!-- enable crc check step -->
		<crc-check>1</crc-check>

	</config>

	<!-- prepare operations -->
	<prepare step="prepare" disabled="false" >
		<!-- create neccessary paths -->
		<mkdir path="admin" />
		<mkdir path="admin/webmerge" />
		<mkdir path="admin/webmerge/generated" />
		<mkdir path="global/merged" />
		<!-- create/copy some files -->
		<copy src="{EXT}/res/htaccess.dev" dst="global/js/.htaccess" />
		<copy src="{EXT}/res/htaccess.dev" dst="global/css/.htaccess" />
		<copy src="{EXT}/res/htaccess.live" dst="global/merged/.htaccess" />
	</prepare>

	<!-- main merge operations -->
	<merge disabled="false">

		<!-- change directory for this block -->
		<config><directory>global</directory></config>

		<css id="styles" step="styles" media="all" disabled="false" >

			<!-- merge css files in order -->
			<input path="css/all.css" />

			<!-- include file only in dev context -->
			<input path="css/dev.css" target="dev" />

			<!-- include file only in live context -->
			<input path="css/live.css" target="live" />

			<!-- special output target for the license file -->
			<output path="merged/styles.license.css.txt" target="license" />

			<!-- where to store the resulting files -->
			<output path="merged/styles.classic.dev.css" target="dev" class="default" />
			<output path="merged/styles.classic.join.css" target="join" class="default" />
			<output path="merged/styles.classic.mini.css" target="minify" class="default" />
			<output path="merged/styles.classic.pack.css" target="compile" class="default" />

			<!-- replaced url reference with inline data -->
			<output path="merged/styles.modern.dev.css" target="dev" class="modern" process="inlinedata" />
			<output path="merged/styles.modern.join.css" target="join" class="modern" process="inlinedata" />
			<output path="merged/styles.modern.mini.css" target="minify" class="modern" process="inlinedata" />
			<output path="merged/styles.modern.pack.css" target="compile" class="modern" process="inlinedata" />

		</css>

		<css id="styles-sub" step="styles" media="all" disabled="false" >

			<!-- merge css files in order -->
			<input path="css/sub.css" />

			<!-- special output target for the license file -->
			<output path="merged/styles-sub.license.css.txt" target="license" />

			<!-- where to store the resulting files -->
			<output path="merged/styles-sub.classic.dev.css" target="dev" class="default" />
			<output path="merged/styles-sub.classic.join.css" target="join" class="default" />
			<output path="merged/styles-sub.classic.mini.css" target="minify" class="default" />
			<output path="merged/styles-sub.classic.pack.css" target="compile" class="default" />

			<!-- replaced url reference with inline data -->
			<output path="merged/styles-sub.modern.dev.css" target="dev" class="modern" process="inlinedata" />
			<output path="merged/styles-sub.modern.join.css" target="join" class="modern" process="inlinedata" />
			<output path="merged/styles-sub.modern.mini.css" target="minify" class="modern" process="inlinedata" />
			<output path="merged/styles-sub.modern.pack.css" target="compile" class="modern" process="inlinedata" />

		</css>

		<js id="header" step="scripts" media="all" disabled="false" >

			<!-- merge js files in order -->
			<input path="js/lib/ready.js" />
			<input path="js/lib/head.js" />

			<!-- special output target for the license file -->
			<output path="merged/header.license.js.txt" target="license" />

			<!-- where to store the resulting files -->
			<output path="merged/header.classic.dev.js" target="dev" class="default" />
			<output path="merged/header.classic.join.js" target="join" class="default" />
			<output path="merged/header.classic.mini.js" target="minify" class="default" />
			<output path="merged/header.classic.pack.js" target="compile" class="default" />

			<!-- replaced url reference with inline data -->
			<output path="merged/header.modern.dev.js" target="dev" class="modern" process="inlinedata" />
			<output path="merged/header.modern.join.js" target="join" class="modern" process="inlinedata" />
			<output path="merged/header.modern.mini.js" target="minify" class="modern" process="inlinedata" />
			<output path="merged/header.modern.pack.js" target="compile" class="modern" process="inlinedata" />

		</js>

		<js id="scripts" step="scripts" media="all" disabled="false" >

			<!-- merge js files in order -->
			<input path="js/all.js" />

			<!-- include file only in dev context -->
			<input path="js/dev.js" target="dev" />

			<!-- include file only in live context -->
			<input path="js/live.js" target="live" />

			<!-- special output target for the license file -->
			<output path="merged/scripts.license.js.txt" target="license" />

			<!-- where to store the resulting files -->
			<output path="merged/scripts.classic.dev.js" target="dev" class="default" />
			<output path="merged/scripts.classic.join.js" target="join" class="default" />
			<output path="merged/scripts.classic.mini.js" target="minify" class="default" />
			<output path="merged/scripts.classic.pack.js" target="compile" class="default" />

			<!-- replaced url reference with inline data -->
			<output path="merged/scripts.modern.dev.js" target="dev" class="modern" process="inlinedata" />
			<output path="merged/scripts.modern.join.js" target="join" class="modern" process="inlinedata" />
			<output path="merged/scripts.modern.mini.js" target="minify" class="modern" process="inlinedata" />
			<output path="merged/scripts.modern.pack.js" target="compile" class="modern" process="inlinedata" />

		</js>

		<js id="scripts-sub" step="scripts" media="all" disabled="false" >

			<!-- merge js files in order -->
			<input path="js/sub.js" />

			<!-- where to store the resulting files -->
			<output path="merged/scripts-sub.classic.dev.js" target="dev" class="default" />
			<output path="merged/scripts-sub.classic.join.js" target="join" class="default" />
			<output path="merged/scripts-sub.classic.mini.js" target="minify" class="default" />
			<output path="merged/scripts-sub.classic.pack.js" target="compile" class="default" />

			<!-- replaced url reference with inline data -->
			<output path="merged/scripts-sub.modern.dev.js" target="dev" class="modern" process="inlinedata" />
			<output path="merged/scripts-sub.modern.join.js" target="join" class="modern" process="inlinedata" />
			<output path="merged/scripts-sub.modern.mini.js" target="minify" class="modern" process="inlinedata" />
			<output path="merged/scripts-sub.modern.pack.js" target="compile" class="modern" process="inlinedata" />

		</js>

	</merge>

	<!-- which headinc is taken is solely decided by the pid -->
	<!-- we will always only just include one headinc per page -->
	<headinc step="headinc" rootid="/" disabled="false" >

		<!-- change directory in this block -->
		<config><directory>admin/webmerge/generated/</directory></config>

		<!-- collect all css includes -->
		<input merged="styles" />

		<!-- collect head js includes -->
		<input merged="header" defer="false" />

		<!-- add a post function to print a message to the log -->
		<input>rtp.ready(function () { console.log('everything is ready'); });</input>

		<!-- collect all other js includes -->
		<input merged="scripts" defer="false" />

		<!-- generate various header includes by class/target -->
		<!-- the files can be directly included in the html header -->
		<output path="default.modern.dev.inc" class="modern" context="dev" />
		<output path="default.modern.live.inc" class="modern" context="live" />
		<output path="default.classic.dev.inc" class="default" context="dev" />
		<output path="default.classic.live.inc" class="default" context="live" />

	</headinc>

	<!-- which headinc is taken is solely decided by the pid -->
	<!-- we will always only just include one headinc per page -->
	<headinc step="headinc" rootid="/sub/" disabled="false" >

		<!-- change directory in this block -->
		<config><directory>admin/webmerge/generated/</directory></config>

		<!-- collect all css includes -->
		<input merged="styles" />
		<input merged="styles-sub" />

		<!-- collect head js includes -->
		<input merged="header" defer="false" />

		<!-- add a post function to print a message to the log -->
		<input>rtp.ready(function () { console.log('everything is ready'); });</input>

		<!-- collect all other js includes -->
		<input merged="scripts" defer="true" />
		<input merged="scripts-sub" defer="true" />

		<!-- generate various header includes by class/target -->
		<!-- the files can be directly included in the html header -->
		<output path="default-sub.modern.dev.inc" class="modern" context="dev" />
		<output path="default-sub.modern.live.inc" class="modern" context="live" />
		<output path="default-sub.classic.dev.inc" class="default" context="dev" />
		<output path="default-sub.classic.live.inc" class="default" context="live" />

	</headinc>

	<!-- create standalone embeding code -->
	<embedder step="embedder" disabled="false" >

		<!-- detect if we are in dev context -->
		<detect feature="dev-context" target="context" enabled="dev" optional="false" />

		<!-- detect if feature inline data is available -->
		<detect feature="inline-data" target="class" enabled="modern" optional="false" />

		<!-- generate a php file to get the embed code (with ua sniffing) -->
		<output path="admin/webmerge/generated/embedder.js" type="js" />
		<output path="admin/webmerge/generated/embedder.php" type="php" />

	</embedder>

</xml>